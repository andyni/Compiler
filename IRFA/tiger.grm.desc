
state 0:

	program : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 3
	program	goto 140
	record	goto 2
	lvalue	goto 1

	.	error


state 1:

	exp : lvalue . ASSIGN exp 
	exp : lvalue .  (reduce by rule 15)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 17
	DOT	shift 16
	ASSIGN	shift 15


	.	reduce by rule 15


state 2:

	exp : record .  (reduce by rule 4)



	.	reduce by rule 4


state 3:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 0


state 4:

	exp : NIL .  (reduce by rule 1)



	.	reduce by rule 1


state 5:

	exp : BREAK .  (reduce by rule 9)



	.	reduce by rule 9


state 6:

	exp : LET . decs IN sequence END 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decs	goto 36
	dec	goto 35
	tydec	goto 34
	tydecs	goto 33
	vardec	goto 32
	fundec	goto 31
	fundecs	goto 30

	.	reduce by rule 31


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 40


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 41
	record	goto 2
	lvalue	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp 
	exp : IF . exp THEN exp ELSE exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 42
	record	goto 2
	lvalue	goto 1

	.	error


state 10:

	exp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 43
	record	goto 2
	lvalue	goto 1

	.	error


state 11:

	exp : LPAREN . evalsequence RPAREN 
	exp : LPAREN . parenexp RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 46
	record	goto 2
	lvalue	goto 1
	evalsequence	goto 45
	parenexp	goto 44

	.	reduce by rule 33


state 12:

	exp : STRING .  (reduce by rule 29)



	.	reduce by rule 29


state 13:

	exp : INT .  (reduce by rule 14)



	.	reduce by rule 14


state 14:

	exp : ID . LPAREN funlist RPAREN 
	exp : ID . LBRACK exp RBRACK OF exp 
	record : ID . LBRACE recordlist RBRACE 
	lvalue : ID .  (reduce by rule 64)
	lvalue : ID . LBRACK exp RBRACK 

	LPAREN	shift 49
	LBRACK	shift 48
	LBRACE	shift 47


	.	reduce by rule 64


state 15:

	exp : lvalue ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 50
	record	goto 2
	lvalue	goto 1

	.	error


state 16:

	lvalue : lvalue DOT . ID 

	ID	shift 51


	.	error


state 17:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 52
	record	goto 2
	lvalue	goto 1

	.	error


state 18:

	exp : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 53
	record	goto 2
	lvalue	goto 1

	.	error


state 19:

	exp : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 54
	record	goto 2
	lvalue	goto 1

	.	error


state 20:

	exp : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 55
	record	goto 2
	lvalue	goto 1

	.	error


state 21:

	exp : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 56
	record	goto 2
	lvalue	goto 1

	.	error


state 22:

	exp : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	record	goto 2
	lvalue	goto 1

	.	error


state 23:

	exp : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 58
	record	goto 2
	lvalue	goto 1

	.	error


state 24:

	exp : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 59
	record	goto 2
	lvalue	goto 1

	.	error


state 25:

	exp : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 60
	record	goto 2
	lvalue	goto 1

	.	error


state 26:

	exp : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 61
	record	goto 2
	lvalue	goto 1

	.	error


state 27:

	exp : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 62
	record	goto 2
	lvalue	goto 1

	.	error


state 28:

	exp : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 63
	record	goto 2
	lvalue	goto 1

	.	error


state 29:

	exp : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 64
	record	goto 2
	lvalue	goto 1

	.	error


state 30:

	dec : fundecs .  (reduce by rule 36)



	.	reduce by rule 36


state 31:

	fundecs : fundec .  (reduce by rule 39)
	fundecs : fundec . fundecs 

	FUNCTION	shift 39

	fundec	goto 31
	fundecs	goto 65

	.	reduce by rule 39


state 32:

	dec : vardec .  (reduce by rule 35)



	.	reduce by rule 35


state 33:

	dec : tydecs .  (reduce by rule 34)



	.	reduce by rule 34


state 34:

	tydecs : tydec .  (reduce by rule 43)
	tydecs : tydec . tydecs 

	TYPE	shift 37

	tydec	goto 34
	tydecs	goto 66

	.	reduce by rule 43


state 35:

	decs : dec . decs 

	FUNCTION	shift 39
	VAR	shift 38
	TYPE	shift 37

	decs	goto 67
	dec	goto 35
	tydec	goto 34
	tydecs	goto 33
	vardec	goto 32
	fundec	goto 31
	fundecs	goto 30

	.	reduce by rule 31


state 36:

	exp : LET decs . IN sequence END 

	IN	shift 68


	.	error


state 37:

	tydec : TYPE . ID EQ ty 

	ID	shift 69


	.	error


state 38:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 70


	.	error


state 39:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 71


	.	error


state 40:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 72


	.	error


state 41:

	exp : WHILE exp . DO exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 73


	.	error


state 42:

	exp : IF exp . THEN exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 74


	.	error


state 43:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : MINUS exp .  (reduce by rule 20)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 20


state 44:

	exp : LPAREN parenexp . RPAREN 

	RPAREN	shift 75


	.	error


state 45:

	exp : LPAREN evalsequence . RPAREN 

	RPAREN	shift 76


	.	error


state 46:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	evalsequence : exp . SEMICOLON exp 
	evalsequence : exp . SEMICOLON evalsequence 
	parenexp : exp .  (reduce by rule 32)

	SEMICOLON	shift 77
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 32


state 47:

	record : ID LBRACE . recordlist RBRACE 

	ID	shift 79

	recordlist	goto 78

	.	reduce by rule 60


state 48:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue : ID LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 80
	record	goto 2
	lvalue	goto 1

	.	error


state 49:

	exp : ID LPAREN . funlist RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 82
	funlist	goto 81
	record	goto 2
	lvalue	goto 1

	.	reduce by rule 53


state 50:

	exp : lvalue ASSIGN exp .  (reduce by rule 6)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 6


state 51:

	lvalue : lvalue DOT ID .  (reduce by rule 65)



	.	reduce by rule 65


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 83
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 28)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19


	.	reduce by rule 28


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 27)
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20


	.	reduce by rule 27


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 25)
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 25
	COMMA	reduce by rule 25
	SEMICOLON	reduce by rule 25
	RPAREN	reduce by rule 25
	RBRACK	reduce by rule 25
	RBRACE	reduce by rule 25
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 25
	OR	reduce by rule 25
	THEN	reduce by rule 25
	ELSE	reduce by rule 25
	TO	reduce by rule 25
	DO	reduce by rule 25
	IN	reduce by rule 25
	END	reduce by rule 25
	FUNCTION	reduce by rule 25
	VAR	reduce by rule 25
	TYPE	reduce by rule 25


	.	error


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 26)
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 26
	COMMA	reduce by rule 26
	SEMICOLON	reduce by rule 26
	RPAREN	reduce by rule 26
	RBRACK	reduce by rule 26
	RBRACE	reduce by rule 26
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 26
	OR	reduce by rule 26
	THEN	reduce by rule 26
	ELSE	reduce by rule 26
	TO	reduce by rule 26
	DO	reduce by rule 26
	IN	reduce by rule 26
	END	reduce by rule 26
	FUNCTION	reduce by rule 26
	VAR	reduce by rule 26
	TYPE	reduce by rule 26


	.	error


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 23)
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 23
	COMMA	reduce by rule 23
	SEMICOLON	reduce by rule 23
	RPAREN	reduce by rule 23
	RBRACK	reduce by rule 23
	RBRACE	reduce by rule 23
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 23
	OR	reduce by rule 23
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23
	IN	reduce by rule 23
	END	reduce by rule 23
	FUNCTION	reduce by rule 23
	VAR	reduce by rule 23
	TYPE	reduce by rule 23


	.	error


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 24)
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 24
	COMMA	reduce by rule 24
	SEMICOLON	reduce by rule 24
	RPAREN	reduce by rule 24
	RBRACK	reduce by rule 24
	RBRACE	reduce by rule 24
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 24
	OR	reduce by rule 24
	THEN	reduce by rule 24
	ELSE	reduce by rule 24
	TO	reduce by rule 24
	DO	reduce by rule 24
	IN	reduce by rule 24
	END	reduce by rule 24
	FUNCTION	reduce by rule 24
	VAR	reduce by rule 24
	TYPE	reduce by rule 24


	.	error


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 22)
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 22
	COMMA	reduce by rule 22
	SEMICOLON	reduce by rule 22
	RPAREN	reduce by rule 22
	RBRACK	reduce by rule 22
	RBRACE	reduce by rule 22
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 22
	OR	reduce by rule 22
	THEN	reduce by rule 22
	ELSE	reduce by rule 22
	TO	reduce by rule 22
	DO	reduce by rule 22
	IN	reduce by rule 22
	END	reduce by rule 22
	FUNCTION	reduce by rule 22
	VAR	reduce by rule 22
	TYPE	reduce by rule 22


	.	error


state 60:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 21)
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 21
	COMMA	reduce by rule 21
	SEMICOLON	reduce by rule 21
	RPAREN	reduce by rule 21
	RBRACK	reduce by rule 21
	RBRACE	reduce by rule 21
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 21
	OR	reduce by rule 21
	THEN	reduce by rule 21
	ELSE	reduce by rule 21
	TO	reduce by rule 21
	DO	reduce by rule 21
	IN	reduce by rule 21
	END	reduce by rule 21
	FUNCTION	reduce by rule 21
	VAR	reduce by rule 21
	TYPE	reduce by rule 21


	.	error


state 61:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 19)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 19


state 62:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 18)
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 18


state 63:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 17)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 17


state 64:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 16)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 16


state 65:

	fundecs : fundec fundecs .  (reduce by rule 40)



	.	reduce by rule 40


state 66:

	tydecs : tydec tydecs .  (reduce by rule 44)



	.	reduce by rule 44


state 67:

	decs : dec decs .  (reduce by rule 30)



	.	reduce by rule 30


state 68:

	exp : LET decs IN . sequence END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 85
	sequence	goto 84
	record	goto 2
	lvalue	goto 1

	.	reduce by rule 48


state 69:

	tydec : TYPE ID . EQ ty 

	EQ	shift 86


	.	error


state 70:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 88
	ASSIGN	shift 87


	.	error


state 71:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 89


	.	error


state 72:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 90
	record	goto 2
	lvalue	goto 1

	.	error


state 73:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 91
	record	goto 2
	lvalue	goto 1

	.	error


state 74:

	exp : IF exp THEN . exp 
	exp : IF exp THEN . exp ELSE exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 92
	record	goto 2
	lvalue	goto 1

	.	error


state 75:

	exp : LPAREN parenexp RPAREN .  (reduce by rule 11)



	.	reduce by rule 11


state 76:

	exp : LPAREN evalsequence RPAREN .  (reduce by rule 2)



	.	reduce by rule 2


state 77:

	evalsequence : exp SEMICOLON . exp 
	evalsequence : exp SEMICOLON . evalsequence 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 94
	record	goto 2
	lvalue	goto 1
	evalsequence	goto 93

	.	error


state 78:

	record : ID LBRACE recordlist . RBRACE 

	RBRACE	shift 95


	.	error


state 79:

	recordlist : ID . EQ exp 
	recordlist : ID . EQ exp COMMA recordlist 

	EQ	shift 96


	.	error


state 80:

	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	lvalue : ID LBRACK exp . RBRACK 

	RBRACK	shift 97
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 81:

	exp : ID LPAREN funlist . RPAREN 

	RPAREN	shift 98


	.	error


state 82:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	funlist : exp .  (reduce by rule 51)
	funlist : exp . COMMA funlist 

	COMMA	shift 99
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 51


state 83:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 66)



	.	reduce by rule 66


state 84:

	exp : LET decs IN sequence . END 

	END	shift 100


	.	error


state 85:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	sequence : exp .  (reduce by rule 46)
	sequence : exp . SEMICOLON sequence 

	SEMICOLON	shift 101
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 46


state 86:

	tydec : TYPE ID EQ . ty 

	ID	shift 105
	LBRACE	shift 104
	ARRAY	shift 103

	ty	goto 102

	.	error


state 87:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 106
	record	goto 2
	lvalue	goto 1

	.	error


state 88:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 107


	.	error


state 89:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 109

	tyfields	goto 108

	.	reduce by rule 63


state 90:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 110


	.	error


state 91:

	exp : WHILE exp DO exp .  (reduce by rule 7)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 7


state 92:

	exp : IF exp THEN exp .  (reduce by rule 12)
	exp : IF exp THEN exp . ELSE exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	ELSE	shift 111


	.	reduce by rule 12


state 93:

	evalsequence : exp SEMICOLON evalsequence .  (reduce by rule 50)



	.	reduce by rule 50


state 94:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	evalsequence : exp . SEMICOLON exp 
	evalsequence : exp SEMICOLON exp .  (reduce by rule 49)
	evalsequence : exp . SEMICOLON evalsequence 

	SEMICOLON	shift 77
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 49


state 95:

	record : ID LBRACE recordlist RBRACE .  (reduce by rule 57)



	.	reduce by rule 57


state 96:

	recordlist : ID EQ . exp 
	recordlist : ID EQ . exp COMMA recordlist 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 112
	record	goto 2
	lvalue	goto 1

	.	error


state 97:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 67)

	OF	shift 113


	.	reduce by rule 67


state 98:

	exp : ID LPAREN funlist RPAREN .  (reduce by rule 3)



	.	reduce by rule 3


state 99:

	funlist : exp COMMA . funlist 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 82
	funlist	goto 114
	record	goto 2
	lvalue	goto 1

	.	reduce by rule 53


state 100:

	exp : LET decs IN sequence END .  (reduce by rule 10)



	.	reduce by rule 10


state 101:

	sequence : exp SEMICOLON . sequence 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 85
	sequence	goto 115
	record	goto 2
	lvalue	goto 1

	.	reduce by rule 48


state 102:

	tydec : TYPE ID EQ ty .  (reduce by rule 45)



	.	reduce by rule 45


state 103:

	ty : ARRAY . OF ID 

	OF	shift 116


	.	error


state 104:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 109

	tyfields	goto 117

	.	reduce by rule 63


state 105:

	ty : ID .  (reduce by rule 54)



	.	reduce by rule 54


state 106:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 37)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 37


state 107:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 118


	.	error


state 108:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 119


	.	error


state 109:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 120


	.	error


state 110:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 121
	record	goto 2
	lvalue	goto 1

	.	error


state 111:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 122
	record	goto 2
	lvalue	goto 1

	.	error


state 112:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	recordlist : ID EQ exp .  (reduce by rule 58)
	recordlist : ID EQ exp . COMMA recordlist 

	COMMA	shift 123
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 58


state 113:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 124
	record	goto 2
	lvalue	goto 1

	.	error


state 114:

	funlist : exp COMMA funlist .  (reduce by rule 52)



	.	reduce by rule 52


state 115:

	sequence : exp SEMICOLON sequence .  (reduce by rule 47)



	.	reduce by rule 47


state 116:

	ty : ARRAY OF . ID 

	ID	shift 125


	.	error


state 117:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 126


	.	error


state 118:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 127
	record	goto 2
	lvalue	goto 1

	.	error


state 119:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 129
	EQ	shift 128


	.	error


state 120:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 130


	.	error


state 121:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 131


	.	error


state 122:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 13)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 13


state 123:

	recordlist : ID EQ exp COMMA . recordlist 

	ID	shift 79

	recordlist	goto 132

	.	reduce by rule 60


state 124:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 5)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 5


state 125:

	ty : ARRAY OF ID .  (reduce by rule 56)



	.	reduce by rule 56


state 126:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 55)



	.	reduce by rule 55


state 127:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 38)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 38


state 128:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 133
	record	goto 2
	lvalue	goto 1

	.	error


state 129:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 134


	.	error


state 130:

	tyfields : ID COLON ID .  (reduce by rule 61)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 135


	.	reduce by rule 61


state 131:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 136
	record	goto 2
	lvalue	goto 1

	.	error


state 132:

	recordlist : ID EQ exp COMMA recordlist .  (reduce by rule 59)



	.	reduce by rule 59


state 133:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 41)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 41


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 137


	.	error


state 135:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 109

	tyfields	goto 138

	.	reduce by rule 63


state 136:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 8)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 8


state 137:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 139
	record	goto 2
	lvalue	goto 1

	.	error


state 138:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 62)



	.	reduce by rule 62


state 139:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LE exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . GT exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 42)

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 42


state 140:


	EOF	accept


	.	error

521 of 1031 action table entries left after compaction
143 goto table entries
